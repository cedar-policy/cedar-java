name: Build and Test CedarJava
on:
    workflow_call:
      inputs:
        cedar_policy_ref:
          required: false
          type: string
        cedar_examples_ref:
          required: false
          default: "main"
          type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
        include:
          - os: ubuntu-latest
            name: Build on Linux
            zigInstall: sudo snap install zig --beta --classic
          - os: macos-14
            name: Build on macOS
            zigInstall: brew install zig
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    steps:
      - name: Checkout Cedar Java
        uses: actions/checkout@v4
        with:
          repository: cedar-policy/cedar-java
          ref: ${{ inputs.cedar_java_ref }}
      - name: Checkout cedar-policy
        uses: actions/checkout@v4
        with:
          repository: cedar-policy/cedar
          ref: ${{ inputs.cedar_policy_ref }}
          path: ./cedar
      - name: Prepare Rust Build
        run: rustup update stable && rustup default stable
      - name: Configure CedarJavaFFI for CI build
        run: bash configure_ci_build.sh
      - name: Check FFI Formatting
        working-directory: CedarJavaFFI
        run: cargo fmt --all --check
      - name: Install Zig
        run: ${{ matrix.zigInstall }}
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'
      - name: Build FFI and Java Libraries
        working-directory: CedarJava
        run: ./gradlew build
      - name: Generate Java Documentation
        working-directory: CedarJava
        run: ./gradlew javadoc
